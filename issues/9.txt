Grolter Bell





1 Issue 9
═════════

  (See also [WSCL issue 63].)

  It is not clear whether it should be allowed to use `""' as a local
  nickname, and in the case this is allowed, whether it should affect
  the `:xxxx' syntax.


[WSCL issue 63] <https://github.com/s-expressionists/wscl/issues/63>

1.1 Example
───────────

  ┌────
  │ (defpackage #:foo
  │   (:use #:cl)
  │   (:local-nicknames ("" "CL")))
  │ 
  │ (in-package #:foo)
  │ 
  │ (print (package-name (symbol-package ':*package*)))
  │ ; => "KEYWORD"  (sbcl, ccl, ecl, clasp, abcl, lispworks)
  │ ; => "COMMON-LISP"  (acl)
  │ 
  │ (print (package-name (symbol-package '||:*package*)))
  │ ; => "KEYWORD"  (ecl, clasp, lispworks)
  │ ; => "COMMON-LISP"  (sbcl, ccl, acl)
  │ ; abcl errors
  └────


1.2 Currently
─────────────

  sbcl, ccl: `:xxxx' is read as a keyword; `||:xxxx' is read as a symbol
  in the package named or nicknamed `""'.

  acl: `:xxxx' and `||:xxxx' are read as a symbol in the package named
  or nicknamed `""'.  `""' is by default a global nickname for the
  `#:KEYWORD' package.

  ecl, clasp, lispworks: `||:xxxx' and `:xxxx' are read as a keyword.

  abcl: `:xxxx' is read as a keyword; `||:xxxx' syntax cannot be read
  (attemts result in an error).


1.3 Proposals
─────────────

  • The `""' local nickname should be explicitely allowed.  `:xxxx'
    should be always read as a keyword; `||:xxxx' should be read as a
    symbol in the package named or nicknamed by `""'.
  • The `""' local nickname should be explicitely allowed.  Both `:xxxx'
    and `||:xxxx' should be read as a symbol in the package named or
    nicknamed by `""'.
